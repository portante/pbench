#!/bin/bash

NCPUS=${1}
if [[ -z "${NCPUS}" ]]; then
    echo "Missing number of CPUs to use" >&2
    exit 1
fi

TARGETDIR=${2}
if [[ -z "${TARGETDIR}" ]]; then
    echo "Missing target directory argument" >&2
    exit 1
fi

WORKDIR=/var/tmp/bitrot-detect
mkdir -p ${WORKDIR}

# Clean up previous run.
rm -f ${WORKDIR}/tbs.md5-*

# We "find" all the controller directories and process them in alphabetical
# order.
find ${TARGETDIR}/ -maxdepth 1 -type d -printf '%P\n' | sort | while read ctrl; do
    # For each controller, we read all the .md5 file contents re-emitting
    # those contents with a file name that contains the full path.
    cat ${TARGETDIR}/${ctrl}/*.md5 | while read hash file; do
        echo "${hash} ${TARGETDIR}/${ctrl}/${file}"
    done
    # All the output is captured into one file so that the requested
    # concurrency can be provided below.
done > ${WORKDIR}/tbs.md5 2> ${WORKDIR}/tbs.err

cat ${WORKDIR}/tbs.err; echo ""

# We use the `--number=r/N` form so that all the workers below will chew
# through the list together in alphabetical order. This makes it convenient
# for an observer to understand how far along the bit-rot detection process
# has progressed.
split --number=r/${NCPUS} ${WORKDIR}/tbs.md5 ${WORKDIR}/tbs.md5-

for i in ${WORKDIR}/tbs.md5-*; do
    md5sum --check ${i} > ${i}.out 2> ${i}.err &
done
wait

cat ${WORKDIR}/tbs.md5-*.err; echo ""

grep -v "OK" ${WORKDIR}/tbs.md5-*.out

exit 0
